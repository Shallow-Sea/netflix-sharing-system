version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:6-focal
    container_name: netflix-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-netflix_sharing_db}
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - netflix-network
    command: mongod --auth

  # 后端API服务
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: netflix-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_DATABASE:-netflix_sharing_db}?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      DATA_ENCRYPTION_KEY: ${DATA_ENCRYPTION_KEY}
      API_ENCRYPTION_KEY: ${API_ENCRYPTION_KEY}
      ALLOW_ADMIN_REGISTRATION: ${ALLOW_ADMIN_REGISTRATION:-false}
      FRONTEND_URL: ${FRONTEND_URL:-https://catnf.dmid.cc}
      API_URL: ${API_URL:-https://catapi.dmid.cc}
      CORS_ORIGINS: ${CORS_ORIGINS:-https://catnf.dmid.cc}
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - api_logs:/app/logs
    networks:
      - netflix-network
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL:-https://catapi.dmid.cc/api}
    container_name: netflix-frontend
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:80"
    networks:
      - netflix-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: netflix-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - netflix-network
    depends_on:
      - frontend
      - api
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

# 网络配置
networks:
  netflix-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 数据卷
volumes:
  mongodb_data:
    driver: local
  api_logs:
    driver: local
  nginx_logs:
    driver: local