# API网站配置 - catapi.dmid.cc
# 宝塔面板 Nginx 配置

server {
    listen 80;
    server_name catapi.dmid.cc;
    
    # 强制跳转HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name catapi.dmid.cc;
    
    # SSL证书配置 (宝塔面板自动配置)
    ssl_certificate /www/server/panel/vhost/cert/catapi.dmid.cc/fullchain.pem;
    ssl_certificate_key /www/server/panel/vhost/cert/catapi.dmid.cc/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # API反向代理
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓冲区设置
        proxy_buffering on;
        proxy_buffer_size 64k;
        proxy_buffers 32 32k;
        proxy_busy_buffers_size 128k;
        
        # 请求体大小限制
        client_max_body_size 10m;
        
        # 安全头部
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # CORS配置
        add_header Access-Control-Allow-Origin "https://catnf.dmid.cc" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, x-auth-token" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # 预检请求处理
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://catnf.dmid.cc";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, x-auth-token";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # 健康检查接口 (不记录日志)
    location = /health {
        proxy_pass http://127.0.0.1:3000/health;
        access_log off;
        
        # 健康检查超时设置
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # API文档接口 (如果有)
    location /api-docs {
        proxy_pass http://127.0.0.1:3000/api-docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 禁止直接访问敏感路径
    location ~ ^/(logs|node_modules|\.git|\.env) {
        deny all;
        return 404;
    }
    
    # 限制请求方法
    if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS)$ ) {
        return 405;
    }
    
    # DDoS防护 - 限制请求频率
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req zone=api burst=20 nodelay;
    
    # 限制连接数
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn conn_limit_per_ip 20;
    
    # 错误处理
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # 自定义错误页面
    location = /404.json {
        default_type application/json;
        return 404 '{"error": "API endpoint not found", "code": 404}';
    }
    
    error_page 404 /404.json;
    
    # 访问日志
    access_log /www/wwwroot/catapi.dmid.cc/logs/access.log;
    error_log /www/wwwroot/catapi.dmid.cc/logs/error.log;
}